services:
  clickhouse:
    image: clickhouse/clickhouse-server:25.4.2
    environment:
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-frog}
      # S3 creds for <from_env/> in XML:
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - ./clickhouse/s3_storage.xml:/etc/clickhouse-server/config.d/s3_storage.xml:ro
      - ./clickhouse/ttl_config.xml:/etc/clickhouse-server/config.d/ttl_config.xml:ro
    restart: unless-stopped

  postgres:
    image: postgres:17.4
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-frog}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-frog}
      POSTGRES_DB: ${POSTGRES_DB:-analytics}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:-changeme}", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    environment:
      NODE_ENV: production
      CLICKHOUSE_HOST: http://clickhouse:8123
      POSTGRES_HOST: postgres
      REDIS_HOST: redis
      BETTER_AUTH_SECRET: ${BETTER_AUTH_SECRET}
      BASE_URL: ${BASE_URL}
      DISABLE_SIGNUP: ${DISABLE_SIGNUP}
    depends_on:
      - clickhouse
      - postgres
      - redis
    restart: unless-stopped

  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile
      args:
        NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}
        NEXT_PUBLIC_DISABLE_SIGNUP: ${DISABLE_SIGNUP}
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}
      NEXT_PUBLIC_DISABLE_SIGNUP: ${DISABLE_SIGNUP}
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  clickhouse-data:
    driver_opts:
      type: "tmpfs"
      device: "tmpfs"
      o: "size=10G"
  postgres-data:
  redis-data:
