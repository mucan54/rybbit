services:
  clickhouse:
    image: clickhouse/clickhouse-server:25.4.2
    volumes:
      - clickhouse-data:/var/lib/clickhouse
    configs:
      - source: clickhouse_s3_config
        target: /etc/clickhouse-server/config.d/s3_storage.xml
      - source: clickhouse_ttl_config
        target: /etc/clickhouse-server/config.d/ttl_config.xml
    environment:
      - CLICKHOUSE_DB=${CLICKHOUSE_DB:-analytics}
      - CLICKHOUSE_USER=${CLICKHOUSE_USER:-default}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-frog}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_REGION:-us-east-1}
      - S3_BUCKET=${S3_BUCKET}
    restart: unless-stopped

  postgres:
    image: postgres:17.4
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-frog}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-frog}
      - POSTGRES_DB=${POSTGRES_DB:-analytics}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:-changeme}", "--appendonly", "yes"]

  backend:
    build:
      context: .
      dockerfile: ./server/Dockerfile
    environment:
      - NODE_ENV=production
      - CLICKHOUSE_HOST=http://clickhouse:8123
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - BASE_URL=${BASE_URL}
      - DISABLE_SIGNUP=${DISABLE_SIGNUP}
    depends_on:
      - clickhouse
      - postgres
      - redis
    restart: unless-stopped

  client:
    build:
      context: .
      dockerfile: ./client/Dockerfile
      args:
        NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}
        NEXT_PUBLIC_DISABLE_SIGNUP: ${DISABLE_SIGNUP}
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
      - NEXT_PUBLIC_DISABLE_SIGNUP=${DISABLE_SIGNUP}
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  clickhouse-data:
  postgres-data:
  redis-data:

configs:
  clickhouse_s3_config:
    content: |
      <clickhouse>
          <storage_configuration>
              <disks>
                  <s3_disk>
                      <type>s3</type>
                      <endpoint>${S3_ENDPOINT}/${S3_BUCKET}/clickhouse/</endpoint>
                      <access_key_id from_env="S3_ACCESS_KEY"/>
                      <secret_access_key from_env="S3_SECRET_KEY"/>
                      <metadata_type>plain</metadata_type>
                      <use_environment_credentials>false</use_environment_credentials>
                  </s3_disk>
              </disks>
              <policies>
                  <s3_policy>
                      <volumes>
                          <main>
                              <disk>s3_disk</disk>
                          </main>
                      </volumes>
                  </s3_policy>
              </policies>
          </storage_configuration>
          <profiles>
              <default>
                  <default_storage_policy>s3_policy</default_storage_policy>
              </default>
          </profiles>
      </clickhouse>
